- для v-bind есть сокращение ':'
- для v-on есть сокращение '@'

- Если все, что находится внутри кавычек директивы, является правдой, элемент отобразится.

- для скрытия элементов следует использовать v-show
    этот метод намного более производителен чем v-if,
    но для примера с носками он не нужен

- V-show только переключает видимость, он не вставляет и не удаляет элемент из DOM.
- при создании списков рекомендуется использовать атрибут :key="variant.variantId"

- computed --> вычисляемые св-ва нужно помещать в computed, так как просто
    методы в methods - это 'дорогостоящая' операция которая будет выполняться каждый раз.
- computed --> это вычисляемые св-ва, они кешируются. Это означает что результат сохраняется
    до тех пор, пока он не изменится. Вычисляемые св-ва в данном случае это бренд и продукт
    Бренд и продукт являются зависимостями названия.
    Если любое значение изменится, то оно перехешируется с учётом этого.

- компоненты --> это повторно используемые блоки кода, которые используются для создания более модульных
    компоненты могут быть внутри других компонентов. Компонент может содержать только один объект.
    Если тегов несколько, то все их нужно обернуть в один DIV

    Vue.component('product', {
        props: {
            message: {
                type: String,
                requered: true,
                default: 'Fucking'
            }
        },
        template: `<h1>{{ message }} Component</h1>`,
        data() {
            return {
                // data - это ф-ция, которая возвращает объект данных
            }
        }
    })

    new Vue({ el: '#components-demo'})

    компонент имеет изолированную область видимости, он не может выйти за пределы для
    передачи данных своих родительских сообщений.
    Вместо этого нужно использовать PROPS

- PROPS --> настраиваемый атрибут для передачи данных в компоненты